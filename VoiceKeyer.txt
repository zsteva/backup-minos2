To use the Minos Voice Keyer you will the Minos distribution from SourceForge.

There are five parts to the operation: computer, Minos build, sound card, switching, and connection of all the programs..

Computer

Use a Raspberry Pi, probably a model 3, although a two is more than adequate.

Minos Build

On the Pi, follow the instructions in the Minos distribution for building under Linux

Sound card

You need a full duplex card. I have been successful with SOME cheap USB dongles, mainly the CM107 based ones.

Switching

This is how I do it; the general principles will remain the same, but your electronic engineering is almost certainly better than mine!

Normal rig microphone goes to sound card microphone.

Sound card output goes to Rig microphone input (it almost certainly needs padding down)

Up to you how you match, isolate etc, etc.

Minos support 2 switch technologies.

1. "WindowsMonitor" - this is an on-screen representation, useful for initial testing.

2. PiGPIO - the GPIO pin on the Pi

In all cases the line allocation is configurable.

We need lines for:

(from equipment to computer)

PTTIn Connected to PTT switch on microphone

L1  Play preset message 1
L2  Play Preset message 2

(from computer to equipment)

PTTOut to allow computer to put rig in transmit.

3. Initial testing.

To try it all  out initially, just use a headset into the soundcard and the "WindowsMonitor" switching.set up via Configuration\keyerConfig.xml (in this setup the Minos keyer operates completely standalone).

4, How it works

ALL microphone activity is passed from the mic, through the soundcard/computer, and back out through the soundcard to the rig.

To record a keyer message, trigger the recording - either via the GUI, or press both L1 and L2 together, release them together, and then press the one you want the message to be assigned to. Timing is tolerant!

Then press the PTT and start talking - it will record while the PTT is pressed. 

To playback the message hit L1 or L2 (as appropriate).

You will need to experiment with all the soundcard mixer settings on both record, playback, and passthrough to get suitable levels. Use Alsamixer on the Pi to get the levels set right, then on the "mixer" tab of the keyer save the setup, so that the keyer will automatically reload it on reboot.

The Pip tone (if you want it)is generated internally in the computer, and when you release the PTT or the playback ends the soundard is switched round so that the pip "tail ends" the voice.

Lots of configuration: Configuration\portConfig.xml controls the switching,  Configuration\keyerConfig.xml controls the keyer.

Don't worry (for now) about all the apparent CW stuff - it is all for generating CW as an audio tone to feed through the rig in a voice mode.

5. Linking all the programs together

Once you have it working with the keyer stand alone, then you can start linking all the multiple programs together, following the examples in the main manual.
